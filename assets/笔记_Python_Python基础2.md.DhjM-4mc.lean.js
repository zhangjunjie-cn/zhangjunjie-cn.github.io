import{_ as d,h as r,V as p,u as a,m as n,f as l}from"./chunks/framework.DXHf_qmv.js";const x=JSON.parse('{"title":"Python 基础2","description":"","frontmatter":{"createtime":"2024/1/25","title":"Python 基础2","outline":[2,3],"isTop":true,"categories":["笔记"],"tags":["Python"]},"headers":[],"relativePath":"笔记/Python/Python基础2.md","filePath":"笔记/Python/Python基础2.md","lastUpdated":1731934995000}'),o={name:"笔记/Python/Python基础2.md"};function i(h,t,c,m,g,b){const s=n("NolebaseGitContributors"),e=n("NolebaseGitChangelog");return l(),r("div",null,[t[0]||(t[0]=p(`<h2 id="_1-python-math-模块、cmath-模块" tabindex="-1">1. Python math 模块、cmath 模块 <a class="header-anchor" href="#_1-python-math-模块、cmath-模块" aria-label="Permalink to &quot;1. Python math 模块、cmath 模块&quot;">​</a></h2><p>Python 中数学运算常用的函数基本都在 math 模块、cmath 模块中。</p><p>Python math 模块提供了许多对浮点数的数学运算函数。</p><p>Python cmath 模块包含了一些用于复数运算的函数。</p><p>cmath 模块的函数跟 math 模块函数基本一致，区别是 cmath 模块运算的是复数，math 模块运算的是数学运算。</p><p>要使用 math 或 cmath 函数必须先导入：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import math</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt;&gt;&gt; import math</span></span>
<span class="line"><span>&gt;&gt;&gt; dir(math)</span></span>
<span class="line"><span>[&#39;__doc__&#39;, &#39;__file__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;acos&#39;, &#39;acosh&#39;, &#39;asin&#39;, &#39;asinh&#39;, &#39;atan&#39;, &#39;atan2&#39;, &#39;atanh&#39;, &#39;ceil&#39;, &#39;copysign&#39;, &#39;cos&#39;, &#39;cosh&#39;, &#39;degrees&#39;, &#39;e&#39;, &#39;erf&#39;, &#39;erfc&#39;, &#39;exp&#39;, &#39;expm1&#39;, &#39;fabs&#39;, &#39;factorial&#39;, &#39;floor&#39;, &#39;fmod&#39;, &#39;frexp&#39;, &#39;fsum&#39;, &#39;gamma&#39;, &#39;gcd&#39;, &#39;hypot&#39;, &#39;inf&#39;, &#39;isclose&#39;, &#39;isfinite&#39;, &#39;isinf&#39;, &#39;isnan&#39;, &#39;ldexp&#39;, &#39;lgamma&#39;, &#39;log&#39;, &#39;log10&#39;, &#39;log1p&#39;, &#39;log2&#39;, &#39;modf&#39;, &#39;nan&#39;, &#39;pi&#39;, &#39;pow&#39;, &#39;radians&#39;, &#39;sin&#39;, &#39;sinh&#39;, &#39;sqrt&#39;, &#39;tan&#39;, &#39;tanh&#39;, &#39;tau&#39;, &#39;trunc&#39;]</span></span>
<span class="line"><span>&gt;&gt;&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>实例</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt;&gt;&gt; import cmath</span></span>
<span class="line"><span>&gt;&gt;&gt; cmath.sqrt(-1)</span></span>
<span class="line"><span>1j</span></span>
<span class="line"><span>&gt;&gt;&gt; cmath.sqrt(9)</span></span>
<span class="line"><span>(3+0j)</span></span>
<span class="line"><span>&gt;&gt;&gt; cmath.sin(1)</span></span>
<span class="line"><span>(0.8414709848078965+0j)</span></span>
<span class="line"><span>&gt;&gt;&gt; cmath.log10(100)</span></span>
<span class="line"><span>(2+0j)</span></span>
<span class="line"><span>&gt;&gt;&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_2-python数学函数" tabindex="-1">2.Python数学函数 <a class="header-anchor" href="#_2-python数学函数" aria-label="Permalink to &quot;2.Python数学函数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>返回值 ( 描述 )</th></tr></thead><tbody><tr><td>abs(x)</td><td>返回数字的绝对值，如abs(-10) 返回 10</td></tr><tr><td>ceil(x)</td><td>返回数字的上入整数，如math.ceil(4.1) 返回 5</td></tr><tr><td>cmp(x, y)</td><td>如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1</td></tr><tr><td>exp(x)</td><td>返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td></tr><tr><td>fabs(x)</td><td>以浮点数形式返回数字的绝对值，如math.fabs(-10) 返回10.0</td></tr><tr><td>floor(x)</td><td>返回数字的下舍整数，如math.floor(4.9)返回 4</td></tr><tr><td>log(x)</td><td>如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td></tr><tr><td>log10(x)</td><td>返回以10为基数的x的对数，如math.log10(100)返回 2.0</td></tr><tr><td>max(x1, x2,...)</td><td>返回给定参数的最大值，参数可以为序列。</td></tr><tr><td>min(x1, x2,...)</td><td>返回给定参数的最小值，参数可以为序列。</td></tr><tr><td>modf(x)</td><td>返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td>pow(x, y)</td><td>x**y 运算后的值。</td></tr><tr><td>round(x [,n])</td><td>返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。</td></tr><tr><td>sqrt(x)</td><td>返回数字x的平方根</td></tr></tbody></table><h2 id="_3-python字符串运算符" tabindex="-1">3.Python字符串运算符 <a class="header-anchor" href="#_3-python字符串运算符" aria-label="Permalink to &quot;3.Python字符串运算符&quot;">​</a></h2><p>下表实例变量 a 值为字符串 &quot;Hello&quot;，b 变量值为 &quot;Python&quot;：</p><table tabindex="0"><thead><tr><th>操作符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>字符串连接</td><td>&gt;&gt;&gt;a + b <br>&#39;HelloPython&#39;</td></tr><tr><td>*</td><td>重复输出字符串</td><td>&gt;&gt;&gt;a * 2<br>&#39;HelloHello&#39;</td></tr><tr><td>[]</td><td>通过索引获取字符串中字符</td><td>&gt;&gt;&gt;a[1] <br>&#39;e&#39;</td></tr><tr><td>[ : ]</td><td>截取字符串中的一部分</td><td>&gt;&gt;&gt;a[1:4]<br>&#39;ell&#39;</td></tr><tr><td>in</td><td>成员运算符 - 如果字符串中包含给定的字符返回 True</td><td>&gt;&gt;&gt;&quot;H&quot; in a <br>True</td></tr><tr><td>not in</td><td>成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td>&gt;&gt;&gt;&quot;M&quot; not in a<br>True</td></tr><tr><td>r/R</td><td>原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母&quot;r&quot;（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td><td>&gt;&gt;&gt;print r&#39;\\n&#39;<br>\\n<br>&gt;&gt;&gt; print R&#39;\\n&#39;<br>\\n<br></td></tr><tr><td>%</td><td>格式字符串</td><td>请看下一章节</td></tr></tbody></table>`,15)),a(s),a(e)])}const y=d(o,[["render",i]]);export{x as __pageData,y as default};
