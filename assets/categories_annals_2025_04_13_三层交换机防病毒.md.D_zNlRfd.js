import{_ as y}from"./chunks/ArticleGPT.zf4Ovkov.js";import{_ as c}from"./chunks/ArticleMetadata.tdmZqfSI.js";import{_ as f,P as h,z as C,A as l,B as i,b as a,G as t,am as p,O as e,Q as n,S as D,aE as k}from"./chunks/framework.DkQBKkdx.js";import"./chunks/index.Ctc8mMkX.js";import"./chunks/theme.C9rgMrzF.js";import"./chunks/dayjs.min.JKWTo7MK.js";const S=JSON.parse('{"title":"三层交换机防病毒","description":"","frontmatter":{"date":"2025/04/13 20:49:38","isTop":false,"title":"三层交换机防病毒","author":"张俊杰","articleGPT":"这是一篇关于","categories":["博客"],"tags":["交换机"]},"headers":[],"relativePath":"categories/annals/2025/04/13/三层交换机防病毒.md","filePath":"categories/annals/2025/04/13/三层交换机防病毒.md","lastUpdated":1744556240000}'),E={name:"categories/annals/2025/04/13/三层交换机防病毒.md"};function B(o,s,L,N,V,v){const g=c,u=h("ClientOnly"),A=y,r=h("Mermaid"),b=h("NolebaseGitContributors"),m=h("NolebaseGitChangelog");return l(),C("div",null,[s[18]||(s[18]=i("h1",{id:"三层交换机防病毒",tabindex:"-1"},[a("三层交换机防病毒 "),i("a",{class:"header-anchor",href:"#三层交换机防病毒","aria-label":'Permalink to "三层交换机防病毒"'},"​")],-1)),s[19]||(s[19]=a()),t(u,null,{default:n(()=>{var d,F;return[(((d=o.$frontmatter)==null?void 0:d.aside)??!0)&&(((F=o.$frontmatter)==null?void 0:F.showArticleMetadata)??!0)?(l(),e(g,{key:0,article:o.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),t(A),s[20]||(s[20]=p(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 所有外网流量统一经过VLANIF30</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">acl</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> number</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> rule</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> deny</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> tcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> source</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 192.168.10.0</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 0.0.0.255</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> destination-port</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> eq</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 445</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">interface</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Vlanif30</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> traffic-filter</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> inbound</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> acl</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span></span></code></pre> <div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>您的问题非常关键，这里涉及到 <strong>流量方向</strong> 和 <strong>安全策略</strong> 的深层逻辑。以下是详细解释：</p> <hr> <h3 id="_1-默认情况下的流量走向" tabindex="-1"><strong>1. 默认情况下的流量走向</strong> <a class="header-anchor" href="#_1-默认情况下的流量走向" aria-label="Permalink to &quot;**1. 默认情况下的流量走向**&quot;">​</a></h3> `,7)),(l(),e(k,null,{default:n(()=>[t(r,{id:"mermaid-13",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20PC1%20--%3E%7C%E8%AF%B7%E6%B1%82%E7%99%BE%E5%BA%A6%7C%20VLANIF10%20--%3E%7C%E8%B7%AF%E7%94%B1%E8%BD%AC%E5%8F%91%7C%20VLANIF30%20--%3E%20Router%20--%3E%20Internet%0A"})]),fallback:n(()=>s[0]||(s[0]=[a(`
          Loading...
        `)])),_:1,__:[1]})),s[21]||(s[21]=p(`<ul><li>✅ <strong>默认允许所有出向流量</strong>：<br>
核心交换机确实会自动通过路由表将VLAN10/20的流量导向VLANIF30出站，<strong>无需额外放行规则</strong>。</li></ul> <hr> <h3 id="_2-acl-3000-的真实作用" tabindex="-1"><strong>2. ACL 3000 的真实作用</strong> <a class="header-anchor" href="#_2-acl-3000-的真实作用" aria-label="Permalink to &quot;**2. ACL 3000 的真实作用**&quot;">​</a></h3> <p>您看到的配置实际上是 <strong>入向（inbound）过滤</strong>，控制的是 <strong>从路由器返回的流量</strong>（非外网访问流量）：</p> <div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">acl</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> number</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> rule</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> deny</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> tcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> source</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 192.168.10.0</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 0.0.0.255</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> destination-port</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> eq</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 445</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">  # 阻止SMB端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">interface</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Vlanif30</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> traffic-filter</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> inbound</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> acl</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">  # 作用于从路由器→核心交换机的方向</span></span></code></pre> <div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="流量方向分解" tabindex="-1">流量方向分解： <a class="header-anchor" href="#流量方向分解" aria-label="Permalink to &quot;流量方向分解：&quot;">​</a></h4> <table tabindex="0"><thead><tr><th>方向</th> <th>典型流量</th> <th>是否需要控制</th></tr></thead> <tbody><tr><td><strong>Outbound</strong> (出站)</td> <td>PC访问百度</td> <td>通常允许（默认放行）</td></tr> <tr><td><strong>Inbound</strong> (入站)</td> <td>外部攻击流量/病毒回传</td> <td>必须严格过滤</td></tr></tbody></table> <hr> <h3 id="_3-为什么要在vlanif30配置入向acl" tabindex="-1"><strong>3. 为什么要在VLANIF30配置入向ACL？</strong> <a class="header-anchor" href="#_3-为什么要在vlanif30配置入向acl" aria-label="Permalink to &quot;**3. 为什么要在VLANIF30配置入向ACL？**&quot;">​</a></h3> <h4 id="安全防护场景" tabindex="-1">安全防护场景： <a class="header-anchor" href="#安全防护场景" aria-label="Permalink to &quot;安全防护场景：&quot;">​</a></h4> `,19)),i("ol",null,[s[6]||(s[6]=i("li",null,[i("p",null,[i("strong",null,"阻止病毒传播")]),a(),i("ul",null,[i("li",null,"如勒索病毒常通过445端口横向扩散"),a(),i("li",null,"即使内网PC感染病毒，也无法通过VLANIF30接口反向感染其他VLAN")])],-1)),s[7]||(s[7]=a()),i("li",null,[s[4]||(s[4]=i("p",null,[i("strong",null,"防御外部攻击")],-1)),s[5]||(s[5]=a()),(l(),e(k,null,{default:n(()=>[t(r,{id:"mermaid-100",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20Hacker%20--%3E%7C%E6%89%AB%E6%8F%8F445%E7%AB%AF%E5%8F%A3%7C%20Router%20--%3E%20VLANIF30%20--ACL%E9%98%BB%E6%96%AD--%3E%20CoreSwitch%0A"})]),fallback:n(()=>s[2]||(s[2]=[a(`
          Loading...
        `)])),_:1,__:[3]}))]),s[8]||(s[8]=a()),s[9]||(s[9]=i("li",null,[i("p",null,[i("strong",null,"合规性要求")]),a(),i("ul",null,[i("li",null,"等保2.0三级要求：必须在网络边界部署访问控制")])],-1))]),s[22]||(s[22]=p(` <hr> <h3 id="_4-企业网络的实际配置示例" tabindex="-1"><strong>4. 企业网络的实际配置示例</strong> <a class="header-anchor" href="#_4-企业网络的实际配置示例" aria-label="Permalink to &quot;**4. 企业网络的实际配置示例**&quot;">​</a></h3> <h4 id="完整安全策略-推荐" tabindex="-1">完整安全策略（推荐）： <a class="header-anchor" href="#完整安全策略-推荐" aria-label="Permalink to &quot;完整安全策略（推荐）：&quot;">​</a></h4> <div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 基础放行规则（出向默认允许，无需配置）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 入向严格管控：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">acl</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> number</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> rule</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> deny</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> tcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> destination-port</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> eq</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 445</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">  # 封堵SMB</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> rule</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> deny</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> tcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> destination-port</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> eq</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3389</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">  # 封堵RDP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> rule</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> permit</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> ip</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">  # 允许其他合法回程流量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">interface</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Vlanif30</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;"> traffic-filter</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> inbound</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> acl</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 3000</span></span></code></pre> <div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="典型流量处理流程" tabindex="-1">典型流量处理流程： <a class="header-anchor" href="#典型流量处理流程" aria-label="Permalink to &quot;典型流量处理流程：&quot;">​</a></h4> `,10)),(l(),e(k,null,{default:n(()=>[t(r,{id:"mermaid-126",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20PC1%5BPC1%E8%AE%BF%E9%97%AE%E7%99%BE%E5%BA%A6%5D%20--%3E%7C%E5%87%BA%E5%90%91%7C%20VLANIF30%20--%3E%20Router%20--%3E%20Internet%0A%20%20%20%20Internet%20--%3E%7C%E5%85%A5%E5%90%91%E5%93%8D%E5%BA%94%E5%8C%85%7C%20Router%20--%3E%20VLANIF30%20--%22ACL%E6%A3%80%E6%9F%A5%22--%3E%20CoreSwitch%0A"})]),fallback:n(()=>s[10]||(s[10]=[a(`
          Loading...
        `)])),_:1,__:[11]})),s[23]||(s[23]=i("hr",null,null,-1)),s[24]||(s[24]=a()),s[25]||(s[25]=i("h3",{id:"_5-如果不配置入向acl的风险",tabindex:"-1"},[i("strong",null,"5. 如果不配置入向ACL的风险"),a(),i("a",{class:"header-anchor",href:"#_5-如果不配置入向acl的风险","aria-label":'Permalink to "**5. 如果不配置入向ACL的风险**"'},"​")],-1)),s[26]||(s[26]=a()),i("ul",null,[s[16]||(s[16]=i("li",null,[i("p",null,[i("strong",null,"风险案例"),a("："),i("br"),a(`
某企业未配置入向ACL，外部攻击者通过VPN漏洞接入内网后，利用SMB协议快速感染所有VLAN的PC。`)])],-1)),s[17]||(s[17]=a()),i("li",null,[s[14]||(s[14]=i("p",null,[i("strong",null,"攻击路径"),a("：")],-1)),s[15]||(s[15]=a()),(l(),e(k,null,{default:n(()=>[t(r,{id:"mermaid-141",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20Attacker%20--%3E%20Router%20--%3E%20VLANIF30%20--%3E%20VLANIF10%20--%3E%20PC1%0A%20%20%20%20VLANIF30%20--%3E%20VLANIF20%20--%3E%20PC2%0A"})]),fallback:n(()=>s[12]||(s[12]=[a(`
          Loading...
        `)])),_:1,__:[13]}))])]),s[27]||(s[27]=p(' <hr> <h3 id="总结回答" tabindex="-1"><strong>总结回答</strong> <a class="header-anchor" href="#总结回答" aria-label="Permalink to &quot;**总结回答**&quot;">​</a></h3> <ul><li>🔹 <strong>出向流量</strong>：VLANIF30默认允许所有VLAN访问外网（通过路由实现）</li> <li>🔹 <strong>入向流量</strong>：必须手动配置ACL过滤恶意流量（安全最佳实践）</li> <li>🔹 <strong>核心原则</strong>：企业网络必须遵循 <strong>&quot;默认拒绝，按需放行&quot;</strong> 的安全策略，尤其在网络边界位置。</li></ul> ',7)),t(b),t(m)])}const w=f(E,[["render",B]]);export{S as __pageData,w as default};
