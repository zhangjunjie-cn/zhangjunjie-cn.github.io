import{_ as b}from"./chunks/ArticleMetadata.Ba2SLkeC.js";import{a0 as c,G as y,H as i,c as a,M as n,L as t,an as r,E as l,A as o,B as A,I as f}from"./chunks/framework.CqMsGXHl.js";import"./chunks/index.kUoKscUs.js";import"./chunks/theme.DF-xqnh1.js";const q=JSON.parse('{"title":"第五版博客发布完成","description":"","frontmatter":{"date":"2024/5/23","title":"第五版博客发布完成","author":"张军杰","categories":["博客"],"tags":["建站"]},"headers":[],"relativePath":"categories/annals/2024/05/23/第五版博客发布完成.md","filePath":"categories/annals/2024/05/23/第五版博客发布完成.md","lastUpdated":1741619773000}'),D={name:"categories/annals/2024/05/23/第五版博客发布完成.md"},v={class:"tip custom-block"},C={class:"tip custom-block"},j={style:{width:"320px",float:"left"}},B={style:{width:"320px",float:"left","margin-left":"20px","margin-bottom":"30px"}};function z(p,s,w,x,N,V){const g=b,F=l("ClientOnly"),e=l("VPNolebaseInlineLinkPreview"),h=l("NCard"),m=l("NolebaseGitContributors"),u=l("NolebaseGitChangelog");return o(),y("div",null,[s[25]||(s[25]=i("h1",{id:"第五版博客发布完成",tabindex:"-1"},[a("第五版博客发布完成 "),i("a",{class:"header-anchor",href:"#第五版博客发布完成","aria-label":'Permalink to "第五版博客发布完成"'},"​")],-1)),n(F,null,{default:t(()=>{var k,d;return[(((k=p.$frontmatter)==null?void 0:k.aside)??!0)&&(((d=p.$frontmatter)==null?void 0:d.showArticleMetadata)??!0)?(o(),A(g,{key:0,article:p.$frontmatter},null,8,["article"])):f("",!0)]}),_:1}),s[26]||(s[26]=i("h2",{id:"_1-技术选型",tabindex:"-1"},[a("1. 技术选型 "),i("a",{class:"header-anchor",href:"#_1-技术选型","aria-label":'Permalink to "1. 技术选型"'},"​")],-1)),s[27]||(s[27]=i("p",null,"  我们知道CI/CD（持续集成/持续部署）是一种软件开发实践，旨在加快开发过程、提高软件质量和简化部署流程。",-1)),s[28]||(s[28]=i("p",null,"  本项目之初也想集成某种CI/CD技术来提高开发效率和跨平台性编码，最开始采用了 GitHub Actions ，编写deploy.yaml来构建、打包、部署，代码提交事件触发“工作流”（workflows）。但效率并不高，并且没有集成编写 issues 就自动集成到项目日志板块中。",-1)),i("p",null,[s[1]||(s[1]=a("  第一种方案劝退，于是想到了第二种方案，能否有一个中间件工具，来实现markdown到vitepress平台的持续自动化部署？在逛github中，我发现了一个项目 ")),i("u",null,[n(e,{href:"https://elog.1874.cool/",target:"_blank",rel:"noreferrer"},{default:t(()=>s[0]||(s[0]=[a("Elog")])),_:1})]),s[2]||(s[2]=a("！！是一种 ")),s[3]||(s[3]=i("code",null,"开放式跨平台博客解决方案",-1)),s[4]||(s[4]=a("。"))]),s[29]||(s[29]=i("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232221241.png"},null,-1)),s[30]||(s[30]=i("p",null,"  花里胡哨的，关键是我也不用飞书啊，我就用VSCode来写markdown，typora我感觉也不大方便写笔记(外存储image太拉了)。这让我想起之前公司的同事，使用VSCode的SSH功能远程连接Docker容器进行代码编辑，照样自动化和远程执行，不就是本地维护版本的CI/CD了？（主要是在大四实习的公司，做Java的时候没去在公司wiki里学k8s，倒是学会了一手很棒的git....）",-1)),i("p",null,[s[6]||(s[6]=a("  Elog支持picgo图床，这绝对是最佳的解决方案！但由于我的vitepress定制功能过多，单一的纯markdown是完全不够,于是为了更好的兼容部分Vue代码的编写，")),i("u",null,[n(e,{href:"https://stackblitz.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>s[5]||(s[5]=[a("StackBlitz")])),_:1})]),s[7]||(s[7]=a("出现了。StackBlitz 是一个在线的全栈开发环境，它允许开发者在浏览器中直接编写、测试和分享代码。"))]),i("div",v,[s[9]||(s[9]=i("p",{class:"custom-block-title"},"在使用过程中你需要下载翻墙工具，来登录github",-1)),i("p",null,[n(e,{href:"https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/Clash.Verge_1.3.8_x64_portable.zip",target:"_blank",rel:"noreferrer"},{default:t(()=>s[8]||(s[8]=[a("-> Clash.Verge_1.3.8_x64_portable.zip")])),_:1})]),s[10]||(s[10]=r('<p>订阅链接：</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;">https://xipcloud.org/client/subscribe/clash/bfa4f20a9c8247c2aefb29eb55a99546</span></span></code></pre></div>',2))]),s[31]||(s[31]=i("p",null,"从而使得在跨开发平台上，可以轻易编写项目。",-1)),s[32]||(s[32]=i("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232348538.png"},null,-1)),i("div",C,[s[12]||(s[12]=i("p",{class:"custom-block-title"},"这里我们不采用picgo，使用更好的picList",-1)),i("p",null,[n(e,{href:"https://release.piclist.cn/latest/PicList-Setup-2.8.5-x64.exe",target:"_blank",rel:"noreferrer"},{default:t(()=>s[11]||(s[11]=[a("-> picList")])),_:1})])]),s[33]||(s[33]=r(`<img src="https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232351658.png"><img src="https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405240011762.png"><h2 id="_2-自动部署及发布" tabindex="-1">2. 自动部署及发布 <a class="header-anchor" href="#_2-自动部署及发布" aria-label="Permalink to &quot;2. 自动部署及发布&quot;">​</a></h2><p>  在准备工作完成之后，编写一个deploy.sh脚本文件来build打包成一个dist文件，用作静态网站发布。</p><details class="details custom-block"><summary>点击展开deploy.sh</summary><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">#!/usr/bin/env sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 忽略错误</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#6CB6FF;">set</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 打包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 切换到 docs/.vitepress.dist目录</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ADBAC7;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;">&quot;StackBlitz 自动部署 NetLify&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git config --global http.postBuffer 524288000</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git commit -m &quot;自动部署vitepress&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git config --global core.autocrlf false</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> https://github.com/zhangjunjie-cn/zhangjunjiee.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git checkout -b dist</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">#拉取fetch到最新仓库并merge合并</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git pull origin dist</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git merge origin/dist </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git checkout dist </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># git branch --set-upstream-to=origin/dist  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> -A</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#96D0FF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#ADBAC7;">msg</span><span style="--shiki-light:#E45649;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> https://github.com/zhangjunjie-cn/zhangjunjiee.git</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> --force</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> master:dist</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 返回上次所在的目录</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> -</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;"># 删除dist文件夹</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div></details><div class="warning custom-block"><p class="custom-block-title">deploy.sh 的编写问题</p><p>因为是web vscode进行代码提交，提交的文件/dist是不需要 git init的，这就导致一个问题，在本地mian分支下需要将/dist提交到GitHub的oringin/dist分支上，默认的push orgin需要本地与远程的分支名相同，如需特别指定可以使用 <code>git branch --set-upstream-to=origin/dist </code>进行指定，或者 <code>git push origin master:dist</code>，但是在web vscode环境下都error异常：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Enumerating</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> 154,</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Counting</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> (154/154), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Compressing</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> (149/149), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> Total</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 154</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;">), reused 154 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">delta</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;">), pack-reused 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">Unpacking</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> (153/153), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">Could</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> find</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> https://github.com/zhangjunjie-cn/zhangjunjiee.git</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#F47067;"> !</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> [rejected]        </span><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist</span><span style="--shiki-light:#383A42;--shiki-dark:#ADBAC7;"> (non-fast-forward)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> some</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> refs</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> &#39;https://github.com/zhangjunjie-cn/zhangjunjiee.git&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>提示找不到dist，我误以为必须要求本地的dist分支才能提交，指定远程的dist是不允许的，于是添加了以下代码：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#768390;--shiki-dark-font-style:inherit;">#git merge origin/dist </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> dist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>但提交的时候仍报这种异常，显然因为git的推送机制的问题，无法验证本地和云端的代码差异，由于web code没有git init 的缓存机制无法进行校验，于是唯一的解决方案就是跳过git push的校验，添加<code>--force</code>进行强制提交。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes one-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> https://github.com/zhangjunjie-cn/zhangjunjiee.git</span><span style="--shiki-light:#986801;--shiki-dark:#6CB6FF;"> --force</span><span style="--shiki-light:#50A14F;--shiki-dark:#96D0FF;"> master:dist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div>`,6)),i("p",null,[s[14]||(s[14]=a("  在/zhangjunjiee目录下，执行")),s[15]||(s[15]=i("code",null,"sh deploy.sh",-1)),s[16]||(s[16]=a("即可。在github项目中就会有一个dist的分支，我们主要使用这个分支进行代码的静态部署。然后在 ")),i("u",null,[n(e,{href:"https://app.netlify.com/start",target:"_blank",rel:"noreferrer"},{default:t(()=>s[13]||(s[13]=[a("Netlify")])),_:1})]),s[17]||(s[17]=a(" 上指定你github上需要部署的分支，他会自动构建并发布。"))]),s[34]||(s[34]=i("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232359957.png"},null,-1)),i("p",null,[s[19]||(s[19]=a("  在 ")),i("u",null,[n(e,{href:"https://app.netlify.com/teams/lianyingzi1324/sites",target:"_blank",rel:"noreferrer"},{default:t(()=>s[18]||(s[18]=[a("https://app.netlify.com/teams/lianyingzi1324/sites")])),_:1})]),s[20]||(s[20]=a(" 上管理自己的项目，真的太棒了🥳🎉🎉。"))]),s[35]||(s[35]=i("h2",{id:"_3-开发环境工具",tabindex:"-1"},[a("3. 开发环境工具 "),i("a",{class:"header-anchor",href:"#_3-开发环境工具","aria-label":'Permalink to "3. 开发环境工具"'},"​")],-1)),i("div",j,[s[22]||(s[22]=i("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405261607705.png"},null,-1)),n(h,null,{default:t(()=>s[21]||(s[21]=[i("a",{href:"https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/Clash.Verge_1.3.8_x64_portable.zip",target:"_blank"},"Clash.Verge_1.3.8_x64_portable.zip ↓",-1)])),_:1})]),i("div",B,[s[24]||(s[24]=i("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405261607705.png"},null,-1)),n(h,null,{default:t(()=>s[23]||(s[23]=[i("a",{href:"https://release.piclist.cn/latest/PicList-Setup-2.8.5-x64.exe",target:"_blank"},"PicList-Setup-2.8.5-x64.exe ↓",-1)])),_:1})]),s[36]||(s[36]=r('<div class="linkcard" style="clear:both;"><a href="https://vitepress.yiov.top/" target="_blank"><p class="description">Vitepress中文搭建教程<br><span>https://vitepress.yiov.top/</span></p><div class="logo"><img alt="Logo" width="70px" height="70px" src="https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405051433983.jpg"></div></a></div>',1)),n(m),n(u)])}const $=c(D,[["render",z]]);export{q as __pageData,$ as default};
